<?php
/**
 * @file
 * Application logic for the University of Iowa Events module.
 */

 /**
  * Implements hook_permission().
  */
function uiowa_events_permission() {
  return array(
    'administer uiowa events' => array(
      'title' => t('Administer University of Iowa Events'),
      'description' => t('Perform administration tasks for the University of Iowa Events module.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function uiowa_events_menu() {

  $items['events'] = array(
    'title' => 'Events',
    'page callback' => 'uiowa_events_full_listing',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['events/day/%day_date'] = array(
    'title' => 'Day',
    'page arguments' => array('day', 2),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['events/week/%week_date'] = array(
    'title' => 'Week',
    'page arguments' => array('week', 2),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  $items['events/month/%month_date'] = array(
    'title' => 'Month',
    'page arguments' => array('month', 2),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  // Determine which tab is the default tab.
  $granularity = variable_get('uiowa_events_default_tab', 'day');
  $default_tab = 'events/' . $granularity . '/%' . $granularity . '_date';
  $items[$default_tab]['type'] = MENU_DEFAULT_LOCAL_TASK;

  $items['event/%'] = array(
    'page callback' => 'uiowa_events_single_event',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/user-interface/uiowa-events'] = array(
    'title' => 'University of Iowa Events',
    'description' => 'Configuration for the University of Iowa Events module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uiowa_events_config_form'),
    'access arguments' => array('administer uiowa events'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/uiowa_events.admin.inc',
  );

  return $items;
}

/**
 * Load day menu arguments.
 *
 * @param string $arg
 *    The initial argument.
 *
 * @return string
 *    The expected argument.
 */
function day_date_to_arg($arg) {
  // If our argument is not provided, give a default of today.
  return (empty($arg) || $arg == '%') ? date('Y-m-d') : $arg;
}

/**
 * Load week menu arguments.
 *
 * @param string $arg
 *    The initial argument.
 *
 * @return string
 *    The expected argument.
 */
function week_date_to_arg($arg) {
  if (empty($arg) || $arg == '%') {
    return date('Y-m-d', strtotime('sunday last week'));
  }
  else {
    return date('Y-m-d', strtotime('sunday last week', strtotime($arg)));
  }
}

/**
 * Load month menu arguments.
 *
 * @param string $arg
 *    The initial argument.
 *
 * @return string
 *    The expected argument.
 */
function month_date_to_arg($arg) {
  if (empty($arg) || $arg == '%') {
    return date('Y-m-d', strtotime('first day of this month'));
  }
  else {
    return date('Y-m-d', strtotime('first day of this month', strtotime($arg)));
  }
}

/**
 * Load and return events from Localist.
 *
 * @todo Pass a parameter array in.
 *
 * @param string $days
 *    Return events within this many days after start.
 *    Cannot be used with end.
 * @param string $type
 *    Limit events to filter item IDs.
 * @param string $start
 *    Start of range. Specified as YYYY-MM-DD.
 * @param string $end
 *    End of range, but does not include this date. Specified as YYYY-MM-DD.
 *
 * @return object
 *    A request object.
 */
function uiowa_events_load($days = NULL, $type = NULL, $start = NULL, $end = NULL) {

  $localist_url = "https://events.uiowa.edu/api/2/events";

  $parameters = array(
    'pp' => '50',
  );

  if (!empty($type)) {
    $parameters['type'] = $type;
  }

  if (!empty($start)) {
    $parameters['start'] = $start;
  }

  if (!empty($end)) {
    $parameters['end'] = $end;
  }

  if (!empty($days)) {
    $parameters['days'] = $days;
  }

  $full_url = url($localist_url, array('query' => $parameters));
  return drupal_http_request($full_url);
}

/**
 * Function to display the full listing of events page.
 */
function uiowa_events_full_listing($length = NULL, $date = NULL) {
  if (empty($length)) {
    $length = variable_get('uiowa_events_default_tab', 'day');
  }

  if (variable_get('uiowa_events_filter_id')) {
    $type = variable_get('uiowa_events_filter_id');
  }

  if (empty($date)) {
    switch ($length) {
      case 'day':
        $date = date('Y-m-d');
        break;

      case 'week':
        $date = date('Y-m-d', strtotime('sunday last week'));
        break;

      case 'month':
        $date = date('Y-m-d', strtotime('first day of this month'));
        break;

      default:
        break;
    }
  }

  if (!cache_get('uiowa_events_full_listing_' . $length . "_" . $date)) {
    switch ($length) {
      case 'day':
        $localist_events = uiowa_events_load($days = 1, $type, $start = $date);
        break;

      case 'week':
        $localist_events = uiowa_events_load($days = 7, $type, $start = $date);
        break;

      case 'month':

        $end = date('Y-m-d', strtotime('first day of next month', strtotime($date)));

        $localist_events = uiowa_events_load(NULL, $type, $date, $end);
        break;

      default:
        break;
    }

    $events = json_decode($localist_events->data, TRUE);

    $data = array();

    foreach ($events['events'] as $event) {
      $new_event = array();
      if (isset($event['event']['id'])) {
        $new_event['id'] = $event['event']['id'];
      }
      if (isset($event['event']['title'])) {
        $new_event['title'] = $event['event']['title'];
      }
      if (isset($event['event']['description'])) {
        $new_event['description'] = $event['event']['description'];
      }
      if (isset($event['event']['event_instances'][0]['event_instance']['start'])) {
        $new_event['start'] = $event['event']['event_instances'][0]['event_instance']['start'];
      }
      if (isset($event['event']['event_instances'][0]['event_instance']['end'])) {
        $new_event['end'] = $event['event']['event_instances'][0]['event_instance']['end'];
      }
      if (isset($event['event']['event_instances'][0]['event_instance']['all_day'])) {
        $new_event['all_day'] = $event['event']['event_instances'][0]['event_instance']['all_day'];
      }
      if (isset($event['event']['photo_url'])) {
        $new_event['photo'] = $event['event']['photo_url'];
      }
      if (isset($event['event']['location'])) {
        $new_event['location'] = $event['event']['location'];
      }
      if (isset($event['event']['room_number'])) {
        $new_event['room_number'] = $event['event']['room_number'];
      }
      array_push($data, $new_event);
    }

    $variables = array(
      'data' => $data,
      'title' => 'Events',
      'date' => $date,
      'length' => $length,
    );

    cache_set('uiowa_events_full_listing_' . $length . "_" . $date, $variables, 'cache', REQUEST_TIME + (60 * variable_get('uiowa_events_cache_time')));

  }
  else {
    $variables = cache_get('uiowa_events_full_listing_' . $length . "_" . $date)->data;
  }

  $uiowa_events_path = drupal_get_path('module', 'uiowa_events') . '/includes';
  include_once DRUPAL_ROOT . '/' . $uiowa_events_path . '/uiowa_events.full_listing.inc';

  return theme('uiowa_events_full_listing', $variables);
}

/**
 * Build the next and previous navigation controls.
 *
 * @param string $granularity
 *    The granularity - either day, week, or month.
 * @param string $date
 *    The active date, in php Y-m-d format.
 *
 * @return array
 *    The array of previous, next, and current label.
 */
function _uiowa_events_nav_control($granularity, $date) {
  $nav_values = array();

  $prefix = '/events/' . $granularity . '/';

  switch ($granularity) {
    case 'day':
      $nav_values['previous'] = $prefix . date('Y-m-d', strtotime("-1 days", strtotime($date)));
      $nav_values['next'] = $prefix . date('Y-m-d', strtotime("+1 days", strtotime($date)));
      $nav_values['label'] = date('l, F j', strtotime($date));
      break;

    case 'week':
      $nav_values['previous'] = $prefix . date('Y-m-d', strtotime("-1 sunday", strtotime($date)));
      $nav_values['next'] = $prefix . date('Y-m-d', strtotime("sunday this week", strtotime($date)));
      $nav_values['label'] = t('Week of @date', array('@date' => date('l, F j', strtotime($date))));
      break;

    case 'month':
      $nav_values['previous'] = $prefix . date('Y-m-d', strtotime("first day of last month", strtotime($date)));
      $nav_values['next'] = $prefix . date('Y-m-d', strtotime("first day of next month", strtotime($date)));
      $nav_values['label'] = date('F Y', strtotime($date));
      break;

    default:
      break;
  }

  return $nav_values;
}

/**
 * Function to display an individual event page.
 */
function uiowa_events_single_event($event_id) {
  // If the configuration is to link out, make all event pages 404.
  if (variable_get('uiowa_events_event_link') == 'event-link-external') {
    drupal_not_found();
  }
  else {
    $localist_url = "https://events.uiowa.edu/api/2/events/" . $event_id;

    if (!cache_get('uiowa_events_single_event' . $event_id)) {
      $localist_event = drupal_http_request($localist_url);
      cache_set('uiowa_events_single_event' . $event_id, $localist_event, 'cache', REQUEST_TIME + (60 * variable_get('uiowa_events_cache_time')));
      $data = json_decode($localist_event->data, TRUE);
    }
    else {
      $return = cache_get('uiowa_events_single_event' . $event_id);
      $data = json_decode($return->data->data, TRUE);
    }
    drupal_add_css(drupal_get_path('module', 'uiowa_events') . '/single.css');
    drupal_add_js(drupal_get_path('module', 'uiowa_events') . '/js/single-event.js');
    $uiowa_events_path = drupal_get_path('module', 'uiowa_events') . '/includes';
    include_once DRUPAL_ROOT . '/' . $uiowa_events_path . '/uiowa_events.single_event.inc';
    return theme('uiowa_events_single_event', array('data' => $data['event'], 'title' => $data['event']['title']));
  }
}

/**
 * Implements hook_theme().
 */
function uiowa_events_theme() {
  $path = drupal_get_path('module', 'uiowa_events') . '/includes';

  $themes = array(
    'uiowa_events_full_listing' => array(
      'path' => $path,
      'file' => 'uiowa_events.full_listing.inc',
      'template' => 'uiowa-events-full-listing',
      'variables' => array('data' => NULL),
    ),
    'uiowa_events_single_event' => array(
      'path' => $path,
      'file' => 'uiowa_events.single_event.inc',
      'template' => 'uiowa-events-single-event',
      'variables' => array('data' => NULL),
    ),
    'uiowa_events_teaser' => array(
      'path' => $path,
      'file' => 'uiowa_events.teaser.inc',
      'template' => 'uiowa-events-teaser',
      'variables' => array('event' => NULL, 'external_link' => NULL),
    ),
    'uiowa_events_full_listing_date_nav' => array(
      'variables' => array('date' => NULL),
    ),
  );
  return $themes;
}
